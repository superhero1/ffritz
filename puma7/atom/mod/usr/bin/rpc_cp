#!/bin/sh
#
# A rudimentary script to trnsfer data between cores using rpc.
# Usage:
#	rpc_cp srcfile dstfile
#	rpc_cp srcfile ... dstdir
#	rpc_cp -r srcdir dstdir
#
# File attributes are NOT transferred
# Recursive copy only transfers FILES
#
# Files are not copied if source is identical to destination
# (lacking diff, md5sum is used).
#

copy_file()
{
	tmp=/tmp/$$.tmp
	rpc cat $1 > $tmp
	if [ $? -ne 0 ]; then
		rm -f $tmp
		exit 1
	fi

	if [ ! -f $2 ]; then
		mv $tmp $2
		exit $?
	fi
	s1=`md5sum <$2`
	s2=`md5sum <$tmp`

	test "$s1" == "$s2" || mv $tmp $2 || exit 1

	rm -f $tmp
}

rec_copy()
{
	filelist=`rpc find $1 -type f | sed -e "s@$1/@@" -e "s@$1@@"`
	
	for file in $filelist; do
		srcfile=$1/$file
		dstfile=$2/$file
		dstdir=`dirname $dstfile`
		
		if [ ! -d $dstdir ]; then
			mkdir -p $dstdir || exit 1
		fi
		
		copy_file $srcfile $dstfile || exit 1
	done
}

if [ "x$1" = "x-r" ]; then
	shift
	if [ $# -ne 2 ]; then
		echo usage: rpc_cp srcdir destdir 1>&2
		exit 1
	fi

	rec_copy $1 $2
	exit $?
fi

count=$#

test $count -lt 2 && exit 1

while [ "x$2" != x ]; do
	srclist="$srclist $1"
	dst=$2
	shift
done

if [ $count -gt 2 -a ! -d $dst ]; then
	echo $dst ist not a directory 1>&2
	exit 1
fi

for src in $srclist; do
	fname=`basename $src`
	if [ -d $dst ]; then
		copy_file $src $dst/$fname
		rc=$?
	else
		copy_file $src $dst
		rc=$?
	fi
	
	if [ $? -ne 0 ]; then
		echo rcp for $src failed 1>&2
		exit 1
	fi
done
