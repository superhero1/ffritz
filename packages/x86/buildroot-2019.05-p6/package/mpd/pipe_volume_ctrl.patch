diff -urN mpd-0.20.5/Makefile.am build/Makefile.am
--- mpd-0.20.5/Makefile.am	2017-02-01 21:58:30.000000000 +0100
+++ build/Makefile.am	2017-03-08 14:18:08.104995408 +0100
@@ -1397,6 +1397,7 @@
 	src/mixer/MixerInternal.hxx
 
 libmixer_plugins_a_SOURCES = \
+	src/mixer/plugins/VolfileMixerPlugin.cxx \
 	src/mixer/plugins/NullMixerPlugin.cxx \
 	src/mixer/plugins/SoftwareMixerPlugin.cxx \
 	src/mixer/plugins/SoftwareMixerPlugin.hxx
diff -urN mpd-0.20.5/src/mixer/MixerList.hxx build/src/mixer/MixerList.hxx
--- mpd-0.20.5/src/mixer/MixerList.hxx	2017-02-01 21:58:30.000000000 +0100
+++ build/src/mixer/MixerList.hxx	2017-03-08 14:09:46.242653710 +0100
@@ -35,5 +35,7 @@
 extern const MixerPlugin roar_mixer_plugin;
 extern const MixerPlugin pulse_mixer_plugin;
 extern const MixerPlugin winmm_mixer_plugin;
+extern const MixerPlugin volfile_volctrl_plugin;
+
 
 #endif
diff -urN mpd-0.20.5/src/mixer/plugins/VolfileMixerPlugin.cxx build/src/mixer/plugins/VolfileMixerPlugin.cxx
--- /dev/null	2017-02-08 08:57:19.166715181 +0100
+++ build/src/mixer/plugins/VolfileMixerPlugin.cxx	2017-03-08 14:48:47.690973560 +0100
@@ -0,0 +1,149 @@
+/*
+ * Copyright (C) 2003-2014 The Music Player Daemon Project
+ * http://www.musicpd.org
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ */
+
+#include "config.h"
+#include "config/ConfigError.hxx"
+#include "config/Block.hxx"
+#include "util/Domain.hxx"
+#include "util/RuntimeError.hxx"
+#include "Log.hxx"
+
+
+#include <stdio.h>
+#include <string.h>
+#include <unistd.h>
+#include <errno.h>
+#include <fcntl.h>
+
+#include <string>
+#include <sys/types.h>
+#include <sys/wait.h>
+
+#include <stdio.h>
+
+/******* A simple mixer for volume control ..
+ * 
+ * If the "volume_file" property is set, it points to a file
+ * whehere the volume level (0..100) is written to in ASCII.
+ *
+ * The command started via popen has the chance to poll this file and 
+ * adjust the volume level accordingly
+ */
+#include "mixer/MixerInternal.hxx"
+#include "mixer/Listener.hxx"
+
+static constexpr Domain volfile_output_domain("volfile_output");
+
+static Mixer *
+volfile_volctrl_init(EventLoop &event_loop, gcc_unused AudioOutput &ao,
+		MixerListener &listener,
+		const ConfigBlock &param);
+
+const MixerPlugin volfile_volctrl_plugin = {
+	volfile_volctrl_init,
+	true,
+};
+
+class PipeMixer final : public Mixer {
+	EventLoop &event_loop;
+
+	const char *volfile;
+	unsigned last_volume;
+
+public:
+	PipeMixer(EventLoop &_event_loop, MixerListener &_listener)
+		:Mixer(volfile_volctrl_plugin, _listener),
+		 event_loop(_event_loop) {}
+
+	virtual ~PipeMixer(){};
+
+	void Configure(const ConfigBlock &param)
+	{
+	    volfile = param.GetBlockValue("volume_file", "");
+	};
+
+	/* virtual methods from class Mixer */
+	void Open() override
+	{
+	    last_volume = 75;
+	    last_volume = GetVolume ();
+	};
+	void Close() override {};
+	int GetVolume()
+	{
+	    int vol;
+
+	    if (strlen(volfile) == 0)
+		return last_volume;
+
+	    FILE *fd = fopen (volfile, "r");
+	    if (fd == NULL)
+	    {
+		FormatError (volfile_output_domain, "Failed to open volume control %s %d", volfile, errno);
+		return last_volume;
+	    }
+
+	    if (fscanf (fd, "%d", &vol) != 1)
+		return last_volume;
+
+	    fclose (fd);
+
+	    return vol;
+	};
+
+	void SetVolume(unsigned volume)
+	{
+	    char out[20];
+
+	    if (volume == last_volume)
+		return;
+
+	    if (strlen(volfile) == 0)
+		return;
+
+	    FILE *fd = fopen (volfile, "w+");
+	    if (fd == NULL)
+	    {
+		FormatError (volfile_output_domain, "Failed to open volume control %s", volfile);
+		return;
+	    }
+
+	    sprintf (out, "%d", volume);
+	    if (fwrite (out, strlen(out), 1, fd) == 0)
+	    {
+		FormatError (volfile_output_domain, "Failed to write volume control %s", volfile);
+		return;
+	    }
+
+	    fclose (fd);
+
+	    last_volume = volume;
+	};
+};
+
+static Mixer *
+volfile_volctrl_init(EventLoop &event_loop, gcc_unused AudioOutput &ao,
+		MixerListener &listener,
+		const ConfigBlock &param)
+{
+	PipeMixer *pm = new PipeMixer(event_loop, listener);
+	pm->Configure (param);
+
+	return pm;
+}
diff -urN mpd-0.20.5/src/output/plugins/FifoOutputPlugin.cxx build/src/output/plugins/FifoOutputPlugin.cxx
--- mpd-0.20.5/src/output/plugins/FifoOutputPlugin.cxx	2017-01-27 08:46:51.000000000 +0100
+++ build/src/output/plugins/FifoOutputPlugin.cxx	2017-03-08 14:16:04.609403652 +0100
@@ -29,6 +29,7 @@
 #include "util/RuntimeError.hxx"
 #include "Log.hxx"
 #include "open.h"
+#include "mixer/MixerList.hxx"
 
 #include <sys/stat.h>
 #include <errno.h>
@@ -257,5 +258,5 @@
 	nullptr,
 	&Wrapper::Cancel,
 	nullptr,
-	nullptr,
+	&volfile_volctrl_plugin,
 };
diff -urN mpd-0.20.5/src/output/plugins/PipeOutputPlugin.cxx build/src/output/plugins/PipeOutputPlugin.cxx
--- mpd-0.20.5/src/output/plugins/PipeOutputPlugin.cxx	2017-01-27 08:46:51.000000000 +0100
+++ build/src/output/plugins/PipeOutputPlugin.cxx	2017-03-08 14:17:00.801217911 +0100
@@ -22,6 +22,8 @@
 #include "../OutputAPI.hxx"
 #include "../Wrapper.hxx"
 #include "system/Error.hxx"
+#include "mixer/MixerList.hxx"
+
 
 #include <string>
 #include <stdexcept>
@@ -99,5 +101,5 @@
 	nullptr,
 	nullptr,
 	nullptr,
-	nullptr,
+	&volfile_volctrl_plugin,
 };
